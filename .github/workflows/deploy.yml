name: Deploy K3S Cluster on Hetzner Cloud

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      master_nodes:
        description: 'Number of master nodes'
        required: false
        default: '1'
        type: string
      worker_nodes:
        description: 'Number of worker nodes'
        required: false
        default: '1'
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Echo secrets lengths
        run: |
          echo "HCLOUD_TOKEN length: $(echo -n "${{ secrets.HCLOUD_TOKEN }}" | wc -c)"
          echo "SSH_PUBLIC_KEY length: $(echo -n "${{ secrets.SSH_PUBLIC_KEY }}" | wc -c)"
          echo "SSH_PRIVATE_KEY length: $(echo -n "${{ secrets.SSH_PRIVATE_KEY }}" | wc -c)"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Init
        run: terraform init

      # Separate job for plan to allow fail-fast approach
      - name: Terraform Plan
        if: github.event.inputs.action == 'apply'
        run: |
          terraform plan \
            -var="hcloud_token=${{ secrets.HCLOUD_TOKEN }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="ssh_private_key='${{ secrets.SSH_PRIVATE_KEY }}'" \
            -var="master_node_count=${{ github.event.inputs.master_nodes }}" \
            -var="worker_node_count=${{ github.event.inputs.worker_nodes }}" \
            -out main.tfplan

      # Upload plan as artifact
      - name: Upload Terraform Plan
        if: github.event.inputs.action == 'apply'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: main.tfplan
          retention-days: 1

  apply:
    needs: terraform
    if: github.event.inputs.action == 'apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create SSH key files
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub

      - name: Make scripts executable
        run: |
          chmod +x scripts/get-kubeconfig.sh
          chmod +x scripts/generate-inventory.sh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Init
        run: terraform init

      # Download the plan
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve "main.tfplan"
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get Cluster Info
        working-directory: ./terraform
        run: |
          if [ -f .terraform.lock.hcl ]; then
            echo "CLUSTER INFO:"
            terraform output
          fi

      - name: Archive kubeconfig
        uses: actions/upload-artifact@v4
        with:
          name: kubeconfig
          path: .kube/config-k3s-cluster

  destroy:
    if: github.event.inputs.action == 'destroy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create SSH key files
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve \
            -var="hcloud_token=${{ secrets.HCLOUD_TOKEN }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="ssh_private_key='${{ secrets.SSH_PRIVATE_KEY }}'" \
            -var="master_node_count=0" \
            -var="worker_node_count=0"