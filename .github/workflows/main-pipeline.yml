name: K3S Deployment on Hetzner Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    environment: development
    env:
      TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Debug Secrets
        run: |
          echo "HCLOUD_TOKEN length: $(echo -n "${{ secrets.HCLOUD_TOKEN }}" | wc -c)"
          echo "SSH_PUBLIC_KEY length: $(echo -n "${{ secrets.SSH_PUBLIC_KEY }}" | wc -c)"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform Deployment
        run: terraform plan -out=main.tfplan || (echo "Terraform plan failed!" && exit 1)

      - name: Check if main.tfplan exists
        run: ls -lah

      - name: Save Terraform Plan
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./terraform

  terraform-apply:
    needs: terraform-plan
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: terraform-apply
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Initialize Terraform (if needed)
        run: |
          if [ ! -d ".terraform" ]; then
            terraform init
          fi

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ./terraform

      - name: Check if main.tfplan exists before applying
        run: ls -lah

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve "main.tfplan"

      - name: Retrieve VM IP
        run: |
          echo "Retrieving VM IP from Terraform output..."
          VM_IP=$(terraform output -raw vm_ip)
          echo "$VM_IP" > vm_ip.txt
          cat vm_ip.txt

      - name: Save VM IP
        uses: actions/upload-artifact@v4
        with:
          name: vm-ip
          path: ./terraform
  
  deploy-k3s:
    needs: terraform-apply
    name: "Deploy K3S"
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download VM IP
        uses: actions/download-artifact@v4
        with:
          name: vm-ip
          path: ./terraform

      - name: Load VM IP
        run: |
          ls -lah
          cat vm_ip.txt
          echo "VM_IP=$(cat vm_ip.txt)" >> $GITHUB_ENV
      
      - name: Deploy K3S via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "Saving SSH private key..."
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          echo "Copying K3S installation script to the server..."
          scp -i private_key.pem -o StrictHostKeyChecking=no scripts/install_k3s.sh root@$VM_IP:/root/

          echo "Executing K3S installation script..."
          ssh -i private_key.pem -o StrictHostKeyChecking=no root@$VM_IP "chmod +x /root/install_k3s.sh && sudo /root/install_k3s.sh"