---
- name: Create k3s config directory
  file:
    path: /etc/rancher/k3s
    state: directory
    mode: '0755'

- name: Configure k3s
  template:
    src: k3s.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
    mode: '0644'

- name: Check if k3s is already installed
  stat:
    path: /usr/local/bin/k3s
  register: k3s_binary

- name: Install k3s
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} sh -s - --config /etc/rancher/k3s/config.yaml
  args:
    creates: /usr/local/bin/k3s
  when: not k3s_binary.stat.exists

- name: Wait for k3s to start
  wait_for:
    path: /var/lib/rancher/k3s/server/token
    state: present
    timeout: 300

- name: Get token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store token
  set_fact:
    k3s_token: "{{ node_token.content | b64decode | trim }}"

- name: Create .kube directory in local user's home directory
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy kubeconfig to user home
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /root/.kube/config
    mode: '0644'
    remote_src: yes

- name: Retrieve the kubeconfig
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /tmp/kubeconfig
    flat: yes

- name: Install kubectl
  shell: |
    curl -LO "https://dl.k8s.io/release/stable.txt"
    KUBERNETES_VERSION=$(cat stable.txt)
    curl -LO "https://dl.k8s.io/release/$KUBERNETES_VERSION/bin/linux/amd64/kubectl"
    chmod +x kubectl
    mv kubectl /usr/local/bin/
  args:
    creates: /usr/local/bin/kubectl

- name: Wait for k3s to be ready
  shell: kubectl get nodes
  register: kubectl_get_nodes
  until: kubectl_get_nodes.rc == 0
  retries: 10
  delay: 5
  changed_when: false